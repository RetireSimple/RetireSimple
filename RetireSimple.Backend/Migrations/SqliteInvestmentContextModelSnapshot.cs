// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RetireSimple.Backend.Services;

#nullable disable

namespace RetireSimple.Backend.Migrations
{
    [DbContext(typeof(SqliteInvestmentContext))]
    partial class SqliteInvestmentContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.10");

            modelBuilder.Entity("RetireSimple.Backend.DomainModel.Data.Expense.ExpenseBase", b =>
                {
                    b.Property<int>("ExpenseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("Amount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("REAL")
                        .HasDefaultValue(0.0);

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("SourceInvestmentId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ExpenseId");

                    b.HasIndex("SourceInvestmentId");

                    b.ToTable("Expenses", (string)null);

                    b.HasDiscriminator<string>("Discriminator").HasValue("ExpenseBase");
                });

            modelBuilder.Entity("RetireSimple.Backend.DomainModel.Data.Investment.InvestmentBase", b =>
                {
                    b.Property<int>("InvestmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AnalysisType")
                        .HasColumnType("TEXT")
                        .HasColumnName("AnalysisType");

                    b.Property<string>("InvestmentData")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("InvestmentType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("InvestmentId");

                    b.ToTable("Investments");

                    b.HasDiscriminator<string>("InvestmentType").HasValue("InvestmentBase");
                });

            modelBuilder.Entity("RetireSimple.Backend.DomainModel.Data.InvestmentModel", b =>
                {
                    b.Property<int>("InvestmentModelId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("InvestmentId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MaxModelData")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("MinModelData")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("InvestmentModelId", "InvestmentId");

                    b.HasIndex("InvestmentId")
                        .IsUnique();

                    b.ToTable("InvestmentModel", (string)null);
                });

            modelBuilder.Entity("RetireSimple.Backend.DomainModel.Data.InvestmentTransfer", b =>
                {
                    b.Property<int>("InvestmentTransferId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("Amount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("REAL")
                        .HasDefaultValue(0.0);

                    b.Property<int>("DestinationInvestmentId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SourceInvestmentId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("TransferDate")
                        .HasColumnType("REAL");

                    b.HasKey("InvestmentTransferId");

                    b.HasIndex("DestinationInvestmentId");

                    b.HasIndex("SourceInvestmentId");

                    b.ToTable("InvestmentTransfers", (string)null);
                });

            modelBuilder.Entity("RetireSimple.Backend.DomainModel.Data.Expense.OneTimeExpense", b =>
                {
                    b.HasBaseType("RetireSimple.Backend.DomainModel.Data.Expense.ExpenseBase");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("OneTime");
                });

            modelBuilder.Entity("RetireSimple.Backend.DomainModel.Data.Expense.RecurringExpense", b =>
                {
                    b.HasBaseType("RetireSimple.Backend.DomainModel.Data.Expense.ExpenseBase");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("Frequency")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("Recurring");
                });

            modelBuilder.Entity("RetireSimple.Backend.DomainModel.Data.Investment.BondInvestment", b =>
                {
                    b.HasBaseType("RetireSimple.Backend.DomainModel.Data.Investment.InvestmentBase");

                    b.ToTable("Investments");

                    b.HasDiscriminator().HasValue("BondInvestment");
                });

            modelBuilder.Entity("RetireSimple.Backend.DomainModel.Data.Investment.FixedInvestment", b =>
                {
                    b.HasBaseType("RetireSimple.Backend.DomainModel.Data.Investment.InvestmentBase");

                    b.ToTable("Investments");

                    b.HasDiscriminator().HasValue("FixedInvestment");
                });

            modelBuilder.Entity("RetireSimple.Backend.DomainModel.Data.Investment.PensionInvestment", b =>
                {
                    b.HasBaseType("RetireSimple.Backend.DomainModel.Data.Investment.InvestmentBase");

                    b.ToTable("Investments");

                    b.HasDiscriminator().HasValue("PensionInvestment");
                });

            modelBuilder.Entity("RetireSimple.Backend.DomainModel.Data.Investment.StockInvestment", b =>
                {
                    b.HasBaseType("RetireSimple.Backend.DomainModel.Data.Investment.InvestmentBase");

                    b.ToTable("Investments");

                    b.HasDiscriminator().HasValue("StockInvestment");
                });

            modelBuilder.Entity("RetireSimple.Backend.DomainModel.Data.Expense.ExpenseBase", b =>
                {
                    b.HasOne("RetireSimple.Backend.DomainModel.Data.Investment.InvestmentBase", "SourceInvestment")
                        .WithMany("Expenses")
                        .HasForeignKey("SourceInvestmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SourceInvestment");
                });

            modelBuilder.Entity("RetireSimple.Backend.DomainModel.Data.InvestmentModel", b =>
                {
                    b.HasOne("RetireSimple.Backend.DomainModel.Data.Investment.InvestmentBase", "Investment")
                        .WithOne("InvestmentModel")
                        .HasForeignKey("RetireSimple.Backend.DomainModel.Data.InvestmentModel", "InvestmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Investment");
                });

            modelBuilder.Entity("RetireSimple.Backend.DomainModel.Data.InvestmentTransfer", b =>
                {
                    b.HasOne("RetireSimple.Backend.DomainModel.Data.Investment.InvestmentBase", "DestinationInvestment")
                        .WithMany("TransfersTo")
                        .HasForeignKey("DestinationInvestmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RetireSimple.Backend.DomainModel.Data.Investment.InvestmentBase", "SourceInvestment")
                        .WithMany("TransfersFrom")
                        .HasForeignKey("SourceInvestmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DestinationInvestment");

                    b.Navigation("SourceInvestment");
                });

            modelBuilder.Entity("RetireSimple.Backend.DomainModel.Data.Investment.InvestmentBase", b =>
                {
                    b.Navigation("Expenses");

                    b.Navigation("InvestmentModel")
                        .IsRequired();

                    b.Navigation("TransfersFrom");

                    b.Navigation("TransfersTo");
                });
#pragma warning restore 612, 618
        }
    }
}
