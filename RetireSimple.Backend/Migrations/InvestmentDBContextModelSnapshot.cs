// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RetireSimple.Backend.Services;

#nullable disable

namespace RetireSimple.Backend.Migrations
{
    [DbContext(typeof(InvestmentDBContext))]
    partial class InvestmentDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.10");

            modelBuilder.Entity("RetireSimple.Backend.DomainModel.Data.Investment.InvestmentBase", b =>
                {
                    b.Property<int>("InvestmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AnalysisType")
                        .HasColumnType("TEXT")
                        .HasColumnName("AnalysisType");

                    b.Property<string>("InvestmentData")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("InvestmentType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("InvestmentId");

                    b.ToTable("Investments");

                    b.HasDiscriminator<string>("InvestmentType").HasValue("InvestmentBase");
                });

            modelBuilder.Entity("RetireSimple.Backend.DomainModel.Data.InvestmentModel", b =>
                {
                    b.Property<int>("InvestmentModelId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("InvestmentId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MaxModelData")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("MinModelData")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("InvestmentModelId", "InvestmentId");

                    b.HasIndex("InvestmentId")
                        .IsUnique();

                    b.ToTable("InvestmentModel", (string)null);
                });

            modelBuilder.Entity("RetireSimple.Backend.DomainModel.Data.Investment.StockInvestment", b =>
                {
                    b.HasBaseType("RetireSimple.Backend.DomainModel.Data.Investment.InvestmentBase");

                    b.ToTable("Investments");

                    b.HasDiscriminator().HasValue("StockInvestment");
                });

            modelBuilder.Entity("RetireSimple.Backend.DomainModel.Data.InvestmentModel", b =>
                {
                    b.HasOne("RetireSimple.Backend.DomainModel.Data.Investment.InvestmentBase", "Investment")
                        .WithOne("InvestmentModel")
                        .HasForeignKey("RetireSimple.Backend.DomainModel.Data.InvestmentModel", "InvestmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Investment");
                });

            modelBuilder.Entity("RetireSimple.Backend.DomainModel.Data.Investment.InvestmentBase", b =>
                {
                    b.Navigation("InvestmentModel")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
