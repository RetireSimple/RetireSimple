name: CI Pipeline

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  get-info:
    name: Get Relevant Project Information
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    outputs:
      date: ${{ steps.date.outputs.date }}
      hash: ${{ steps.commithash.outputs.hash }}
      prev-hash: ${{ steps.prevcommithash.outputs.prevhash }}
    steps:
      - uses: actions/checkout@v3
      - name: Get date for Nightly Release body
        id: date
        run: echo "date=$(date +'%Y-%m-%d %H:%M:%S %Z')" >> $GITHUB_OUTPUT
      - name: Get Short Commit Hash for Nightly Versioning
        id: commithash
        run: echo "hash=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

  engine-build:
    name: RetireSimple.Engine
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.x
      - name: Restore NuGet Cache
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-
      - name: Restore .NET Projects
        run: dotnet restore
      - name: Build Engine
        run: dotnet build ./RetireSimple.Engine/RetireSimple.Engine.csproj --no-restore --no-dependencies
      - name: Build Test Project
        run: dotnet build ./RetireSimple.Tests/RetireSimple.Tests.csproj --no-restore --no-dependencies
      - name: Execute Tests
        run: dotnet test --no-build --verbosity normal

  # Only used for PRs because we don't want to build the backend twice
  backend-build:
    name: RetireSimple.Backend
    runs-on: windows-latest
    needs: engine-build
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v3
      - name: Restore NuGet Cache
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 7
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: pnpm
          cache-dependency-path: RetireSimple.Frontend/pnpm-lock.yaml
      - name: Init Frontend Dependencies
        run: |
          cd RetireSimple.Frontend
          pnpm install
          cd ..
      - name: Build Backend
        run: dotnet build ./RetireSimple.Backend/RetireSimple.Backend.csproj --no-restore

  frontend-build:
    name: RetireSimple.Frontend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 7
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: pnpm
          cache-dependency-path: RetireSimple.Frontend/pnpm-lock.yaml
      - name: Build
        run: |
          cd RetireSimple.Frontend
          pnpm install
          pnpm run build
          cd ..
      - name: Run Tests
        run: |
          cd RetireSimple.Frontend
          pnpm run test
          cd ..

  # Backend build is done in publish, so only rely on engine and do it on push to main
  build-exec:
    name: Build Executable (Windows)
    runs-on: windows-latest
    needs: [engine-build, frontend-build, get-info]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    strategy:
      fail-fast: true
      matrix:
        include:
          - name: "Windows x64"
            platform: "win-x64"
          - name: "Windows x86"
            platform: "win-x86"
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.x
      - name: Restore NuGet Cache
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 7
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: pnpm
          cache-dependency-path: RetireSimple.Frontend/pnpm-lock.yaml
      - name: Init Frontend Dependencies
        run: |
          cd RetireSimple.Frontend
          pnpm install
          cd ..
      - name: Build Executable
        run: dotnet publish ./RetireSimple.Backend/RetireSimple.Backend.csproj
          --configuration Release
          --runtime ${{ matrix.platform }}
          --output ./publish/RetireSimple-${{ matrix.platform }}
          -p:PublishProfile=./RetireSimple.Backend/Properties/PublishProfiles/FolderProfile.pubxml
          -p:VersionPrefix=${{ vars.VERSION_PREFIX }}
          -p:VersionSuffix=nightly-${{ needs.get-info.outputs.hash }}
      # - name: Build Engine NuGet Package
      #   run: dotnet pack ./RetireSimple.Engine/RetireSimple.Engine.csproj
      #     --no-restore
      #     --configuration Release
      #     --output ./publish
      #     -p:VersionPrefix=${{ vars.VERSION_PREFIX }}
      #     -p:VersionSuffix=nightly
      - name: Zip Executable
        run: |
          cd publish/RetireSimple-${{ matrix.platform }}
          7z a -tzip ../RetireSimple-${{ matrix.platform }}.zip .
      - name: Upload Artifact for Release Job
        uses: actions/upload-artifact@v3
        with:
          name: RetireSimple-${{ matrix.platform }}
          path: publish/RetireSimple-${{ matrix.platform }}.zip
          retention-days: 1

  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [build-exec, get-info]
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v3
      - name: Clear old Nightly Release
        uses: dev-drprasad/delete-tag-and-release@v0.2.0
        continue-on-error: true
        with:
          tag_name: nightly
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Nightly
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: nightly
          name: Nightly
          allowUpdates: true
          draft: false
          prerelease: true
          artifacts: RetireSimple-*/RetireSimple-*.zip
          body: |
            The latest code of the project, automatically uploaded by Github Actions, on each change.
            While we do try and test everything, we don't guarantee that this build is bug-free, so **use at your own risk**!

            **Version:** ${{ vars.VERSION_PREFIX }}-nightly-${{ needs.get-info.outputs.hash }}
            **Head:** ${{ github.sha }}
            **Date:** ${{ needs.get-info.outputs.date }}
