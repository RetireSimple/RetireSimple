name: Nightly Builder

on:
  push:
    branches: ["main"]

jobs:
  get-info:
    name: Get Relevant Project Information
    runs-on: ubuntu-latest
    outputs:
      date: ${{ steps.date.outputs.date }}
      hash: ${{ steps.commithash.outputs.hash }}
      prev-hash: ${{ steps.prevcommithash.outputs.prevhash }}
    steps:
      - uses: actions/checkout@v3
      - name: Get date for Nightly Release body
        id: date
        run: echo "date=$(date +'%Y-%m-%d %H:%M:%S %Z')" >> $GITHUB_OUTPUT
      - name: Get Short Commit Hash for Nightly Versioning
        id: commithash
        run: echo "hash=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

  # Backend build is done in publish, so only rely on engine and do it on push to main
  build-win:
    name: Build Executable (Windows)
    runs-on: windows-latest
    needs: [get-info]
    strategy:
      fail-fast: true
      matrix:
        include:
          - name: "Windows x64"
            platform: "win-x64"
          - name: "Windows x86"
            platform: "win-x86"
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.x
      - name: Restore NuGet Cache
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 7
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: pnpm
          cache-dependency-path: RetireSimple.Frontend/pnpm-lock.yaml
      - name: Init Frontend Dependencies
        run: |
          cd RetireSimple.Frontend
          pnpm install
          cd ..
      - name: Build Executable
        run: dotnet publish ./RetireSimple.Backend/RetireSimple.Backend.csproj
          --configuration Release
          --runtime ${{ matrix.platform }}
          --output ./publish/RetireSimple-${{ matrix.platform }}
          -p:PublishProfile=./RetireSimple.Backend/Properties/PublishProfiles/FolderProfile.pubxml
          -p:VersionPrefix=${{ vars.VERSION_PREFIX }}
          -p:VersionSuffix=nightly-${{ needs.get-info.outputs.hash }}
      - name: Zip Executable
        run: |
          cd publish/RetireSimple-${{ matrix.platform }}
          7z a -tzip ../RetireSimple-${{ matrix.platform }}.zip .
      - name: Upload Artifact for Release Job
        uses: actions/upload-artifact@v3
        with:
          name: RetireSimple-${{ matrix.platform }}
          path: publish/RetireSimple-${{ matrix.platform }}.zip
          retention-days: 1

  build-linux:
    name: Build Executable (Linux)
    runs-on: ubuntu-latest
    needs: [get-info]
    strategy:
      fail-fast: true
      matrix:
        include:
          - name: "Linux x64"
            platform: "linux-x64"
          - name: "Linux ARM64"
            platform: "linux-arm64"
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.x
      - name: Restore NuGet Cache
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 7
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: pnpm
          cache-dependency-path: RetireSimple.Frontend/pnpm-lock.yaml
      - name: Build Frontend
        run: |
          cd RetireSimple.Frontend
          pnpm install
          pnpm run build
          cd ..
      - name: Build Backend Executable
        run: dotnet publish ./RetireSimple.Backend/RetireSimple.Backend.csproj
          --configuration Release
          --runtime ${{ matrix.platform }}
          --output ./publish/RetireSimple-${{ matrix.platform }}
          -p:PublishProfile=./RetireSimple.Backend/Properties/PublishProfiles/FolderProfile.pubxml
          -p:VersionPrefix=${{ vars.VERSION_PREFIX }}
          -p:VersionSuffix=nightly-${{ needs.get-info.outputs.hash }}
      - name: Copy Frontend Resources
        run: |
          mkdir -p publish/RetireSimple-${{ matrix.platform }}/wwwroot
          cp -r RetireSimple.Frontend/build/* publish/RetireSimple-${{ matrix.platform }}/wwwroot
      - name: Zip Executable
        run: |
          cd publish/RetireSimple-${{ matrix.platform }}
          7z a -tzip ../RetireSimple-${{ matrix.platform }}.zip .
      - name: Upload Artifact for Release Job
        uses: actions/upload-artifact@v3
        with:
          name: RetireSimple-${{ matrix.platform }}
          path: publish/RetireSimple-${{ matrix.platform }}.zip
          retention-days: 1

  build-macos:
    name: MacOS Build
    runs-on: macos-latest
    needs: [get-info]
    strategy:
      fail-fast: true
      matrix:
        include:
          - name: MacOS x64 (Intel)
            platform: "osx-x64"
          - name: "MacOS ARM64 (Apple Silicon)"
            platform: "osx.12-arm64"
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.x
      - name: Restore NuGet Cache
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 7
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: pnpm
          cache-dependency-path: RetireSimple.Frontend/pnpm-lock.yaml
      - name: Build Frontend
        run: |
          cd RetireSimple.Frontend
          pnpm install
          pnpm run build
          cd ..
      - name: Build Executable
        run: dotnet publish ./RetireSimple.Backend/RetireSimple.Backend.csproj
          --configuration Release
          --runtime ${{ matrix.platform }}
          --output ./publish/RetireSimple-${{ matrix.platform }}
          -p:PublishProfile=./RetireSimple.Backend/Properties/PublishProfiles/FolderProfile.pubxml
          -p:VersionPrefix=${{ vars.VERSION_PREFIX }}
          -p:VersionSuffix=nightly-${{ needs.get-info.outputs.hash }}
      - name: Copy Frontend Resources
        run: |
          mkdir -p publish/RetireSimple-${{ matrix.platform }}/wwwroot
          cp -r RetireSimple.Frontend/build/* publish/RetireSimple-${{ matrix.platform }}/wwwroot
      - name: Install + Setup Platypus
        run: |
          brew install platypus
          sudo ln -s /usr/local/Cellar/platypus/5.3/share/platypus /usr/local/share/platypus
        # Unfortunately, the platypus executable expects its resources in /usr/local/share/platypus
        # and not the homebrew cellar. But my god symlinks are based
      - name: Prepare to Create Bundled App
        run: |
          cd publish/RetireSimple-${{ matrix.platform }}
          echo "Creating Init Script"
          echo '#!/bin/sh' > init.sh
          echo "./RetireSimple.Backend" > init.sh
          chmod +x init.sh
          chmod +x RetireSimple.Backend
          platypus \
            --name 'RetireSimple' \
            --interface-type 'Text Window' \
            --interpreter '/bin/sh' \
            --author 'Alex Westerman, Ryan Nikolic' \
            --app-version ${{ vars.VERSION_PREFIX }}-nightly-${{ needs.get-info.output.hash }} \
            --overwrite \
            --quit-after-execution \
            --bundle-identifier org.RetireSimple.RetireSimple \
            --bundled-file './appsettings.Development.json' \
            --bundled-file './appsettings.json' \
            --bundled-file './libe_sqlite3.dylib' \
            --bundled-file './packages.lock.json' \
            --bundled-file './RetireSimple.Backend' \
            --bundled-file './wwwroot' \
            './init.sh'
          cd ../..
      - name: Zip Bundled Executable
        run: |
          cd publish/RetireSimple-${{ matrix.platform }}
          7z a -tzip ../RetireSimple-${{ matrix.platform }}.zip .
      - name: Upload Artifact for Release Job
        uses: actions/upload-artifact@v3
        with:
          name: RetireSimple-${{ matrix.platform }}
          path: publish/RetireSimple-${{ matrix.platform }}.zip
          retention-days: 1

  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [build-win, build-linux, build-macos, get-info]
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v3
      - name: Nightly
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: nightly-${{ needs.get-info.outputs.hash }}
          name: Nightly
          allowUpdates: true
          draft: false
          prerelease: true
          artifacts: RetireSimple-*/RetireSimple-*.zip
          body: |
            The latest code of the project, automatically uploaded by Github Actions, on each change.
            While we do try and test everything, we don't guarantee that this build is bug-free, so **use at your own risk**!

            **Version:** ${{ vars.VERSION_PREFIX }}-nightly-${{ needs.get-info.outputs.hash }}
            **Head:** ${{ github.sha }}
            **Date:** ${{ needs.get-info.outputs.date }}
